name: CI Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    env:
      LOCATION: asia-docker.pkg.dev
      PROJECT_ID: plenary-line-385613
      REPO_NAME: bigproject
      IMAGE_NAME: apigateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable
        run: echo "VERSION=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Display Node.js version
        run: node --version

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run coverage test
        run: npm run test:cov

      - name: Build Docker image
        run: |
          docker build --rm --no-cache --pull -t \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:${{env.VERSION}} .

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.SERVICEACCOUNTKEY }}

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          service_account_key: ${{ secrets.SERVICEACCOUNTKEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
          skip_install: false

      - name: Configure Docker Client
        run: gcloud auth configure-docker ${{ env.LOCATION }} --quiet

      - name: Push Docker Image to Artifact Registry (Development)
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          # Copy tag
          docker tag \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:${{env.VERSION}} \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:dev

          # Push the image (Development)
          docker push \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
          docker push \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:dev

      - name: Push Docker Image to Artifact Registry (Production)
        if: ${{ github.ref == 'refs/heads/prod' }}
        run: |
          # Copy tag
          docker tag \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:${{env.VERSION}} \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:prod

          # Push the image (Production)
          docker push \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
          docker push \
            ${{env.LOCATION}}/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.IMAGE_NAME}}:prod
